<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="_Mybatis_">

	<select id="findBySql" parameterType="sqlAdapter" resultType="dbRecord">
		${sql}
	</select>
	
	<update id="updateBySql" parameterType="sqlAdapter">
		${sql}
	</update>
	
	<delete id="deleteBySql" parameterType="sqlAdapter">
		${sql}
	</delete>
	
	<update id="updateEntity" parameterType="record">
		UPDATE ${table} SET
		<foreach collection="values" index="key" item="value" separator=",">
			<choose>
				<when test="value.type == 'sql'">
					${key} = (${value.value})
				</when>
				<otherwise>
					${key} = #{value.value}
				</otherwise>
			</choose>
		</foreach>
		 WHERE
		<choose>
			<when test="pk != null and pk.colList!=null and pk.colList.size()>0">
            	<foreach collection="pk.colList" item="pkCol" separator="AND">
            		${pkCol.name} = #{pkCol.value}
            	</foreach>
			</when>
			<otherwise>
				1=2
            </otherwise>
		</choose>
	</update>
	
	<sql id="sql_batchUpdateEntity">
		UPDATE ${record.table} SET
		<foreach collection="record.values" index="key" item="value" separator=",">
			<choose>
				<when test="value.type == 'sql'">
					${key} = (${value.value})
				</when>
				<otherwise>
					${key} = #{value.value}
				</otherwise>
			</choose>
		</foreach>
		 WHERE
		<choose>
			<when test="record.pk != null and record.pk.colList!=null and record.pk.colList.size()>0">
            	<foreach collection="record.pk.colList" item="pkCol" separator="AND">
            		${pkCol.name} = #{pkCol.value}
            	</foreach>
			</when>
			<otherwise>
				1=2
            </otherwise>
		</choose>
	</sql>
	
	<update id="batchUpdateEntity" parameterType="java.util.List" databaseId="oracle">
		<foreach collection="list" item="record" index="index" open="begin" close="end;" separator=";">
			<include refid="sql_batchUpdateEntity"></include>
		</foreach>
	</update>
	
	<update id="batchUpdateEntity" parameterType="java.util.List" databaseId="mysql">
		<foreach collection="list" item="value" index="index" open="" close="" separator=";">  
			<include refid="sql_batchUpdateEntity"></include>
		</foreach>
	</update>
	
	<insert id="insertEntity" parameterType="record">
		INSERT INTO ${table}
		<foreach collection="values" index="key" open="(" separator="," close=")">
			${key}
		</foreach>
		VALUES (
		<foreach collection="values" index="key" item="value" separator=",">
			<choose>
				<when test="value.type == 'sql'">
					(${value.value})
				</when>
				<otherwise>
					#{value.value}
				</otherwise>
			</choose>
		</foreach>
		)
	</insert>
	
	<insert id="batchInsertEntity" parameterType="java.util.List" databaseId="oracle">
		INSERT INTO ${list[0].table}
		<foreach collection="list[0].values" index="key" open="(" separator="," close=")">
			${key}
		</foreach>
		<foreach collection="list" item="record" open="(" separator="union all" close=")">
			<foreach collection="record.values" index="key" item="value" open="SELECT " separator="," close=" FROM DUAL ">
				<choose>
					<when test="value.type == 'sql'">
						(${value.value})
					</when>
					<otherwise>
						#{value.value}
					</otherwise>
				</choose>
			</foreach>
		</foreach>
	</insert>
	
	<insert id="batchInsertEntity" parameterType="java.util.List" databaseId="mysql">
		INSERT INTO ${list[0].table}
		<foreach collection="list[0].values" index="key" open="(" separator="," close=")">
			${key}
		</foreach>
		VALUES
		<foreach collection="list" item="record" open="(" separator="," close=")">
			<foreach collection="record.values" index="key" item="value" separator=",">
				<choose>
					<when test="value.type == 'sql'">
						(${value.value})
					</when>
					<otherwise>
						#{value.value}
					</otherwise>
				</choose>
			</foreach>
		</foreach>
	</insert>
	
	<delete id="deleteEntity" parameterType="pk">
		DELETE FROM ${table} WHERE
		<choose>
			<when test="colList!=null and colList.size()>0">
            	<foreach collection="colList" item="col" separator="AND">
            		${col.name} = #{col.value}
            	</foreach>
			</when>
			<otherwise>
				1=2
            </otherwise>
		</choose>
	</delete>
	
	<select id="getEntity" parameterType="record" resultType="dbRecord">
		SELECT T.* FROM ${table} T WHERE
		<choose>
			<when test="pk != null and pk.colList!=null and pk.colList.size()>0">
            	<foreach collection="pk.colList" item="pkCol" separator="AND">
            		${pkCol.name} = #{pkCol.value}
            	</foreach>
			</when>
			<otherwise>
				1=2
            </otherwise>
		</choose>
	</select>
	
	<sql id="sql_colByParam">
		<choose>
			<when test="_columnList != null and _columnList.size() > 0">
				<foreach collection="_columnList" item="_column" separator=",">
					${_column}
				</foreach>
			</when>
			<otherwise>
				*
			</otherwise>
		</choose>
	</sql>
	
	<sql id="sql_conditionByParam">
		<if test="_conditionList != null and _conditionList.size() > 0">
			<foreach collection="_conditionList" item="_condition" separator=" AND " open=" AND (" close=")">
				${_condition}
			</foreach>
		</if>
	</sql>
	
	<sql id="sql_sort">
		<if test="_sort != null">
			ORDER BY ${_sort}
		</if>
	</sql>
	
	<select id="countEntity" parameterType="java.util.Map" resultType="dbRecord">
		SELECT COUNT(*)
		  FROM ${_table}
		 WHERE 1=1
		<include refid="sql_conditionByParam"></include>
	</select>
	
	<select id="findEntity" parameterType="java.util.Map" resultType="dbRecord">
		SELECT <include refid="sql_colByParam"></include>
		  FROM ${_table}
		 WHERE 1=1
		<include refid="sql_conditionByParam"></include>
		<include refid="sql_sort"></include>
	</select>
	
</mapper>